name: üåê Web Build

on:
  workflow_call:
    inputs:
      tag:
        description: 'Git tag for release builds.'
        required: false
        type: string
      flutter-version:
        description: 'Flutter version (optional).'
        required: false
        type: string
        # default: '3.27.2' # Default set in Setup Flutter step

  # Triggers on Pull Requests targeting main
  pull_request:
    branches:
      - main

  # Triggers on push to the specific test branch
  push:
    branches:
      - chore/siau/fix-web-app-deployment

  # Allows manual triggering
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-web:
    name: üåê Build and Deploy Web
    runs-on: ubuntu-latest 
    env: 
      APP_NAME: Flites
      APP_ID: com.marqably.flites
    steps:
      # Optional: Debug step
      - name: DEBUG Print Workflow Input Tag
        if: github.event_name == 'workflow_call'
        run: |
         echo "Workflow Input (inputs.tag): ${{ inputs.tag }}"

      - name: üìö Git Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_call' && inputs.tag || github.ref }}

      - name: Determine Build Context & Variables
        id: vars
        uses: ./.github/actions/determine_build_vars
        with:
          platform: 'web' # Specify platform as web
          event_name: ${{ github.event_name }}
          ref_name: ${{ github.ref_name }} # Pass the branch/tag name
          tag_input: ${{ inputs.tag }}
          pr_number: ${{ github.event.number }}
          run_id: ${{ github.run_id }}

      - name: üì¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ inputs.flutter-version || '3.27.2' }}
          architecture: x64 
          cache: true

      - name: üì¶ Setup Melos
        uses: bluefireteam/melos-action@v2

      # Web specific setup
      - name: üîß Enable Web & Check Doctor
        run: |
          flutter config --enable-web
          flutter doctor -v
        shell: bash 

      - name: üîÑ Get Dependencies
        run: melos bootstrap
        shell: bash

      # Build Web App
      - name: üèóÔ∏è Build Web App
        run: |
          cd apps/flites # Ensure you are in the right directory
          echo "Building Web app version ${{ steps.vars.outputs.package_version }}"
          # IMPORTANT: Add --base-href if deploying to a subdirectory (like GitHub Pages)
          # Example for deploying to github.com/user/repo/ -> flutter build web --release --base-href /repo/
          # Example for deploying to custom domain root -> flutter build web --release
          flutter build web --release
        shell: bash

      # Package Web output into Zip
      - name: üì¶ Package Web Build into Zip
        shell: bash
        run: |
          # Adjust source directory relative to workspace root if needed
          SOURCE_DIR="apps/flites/build/web"
          # Get zip filename from composite action output
          ZIP_FILE_NAME="${{ steps.vars.outputs.artifact_suffix }}"
          # Get absolute path to workspace root
          WORKSPACE_ROOT="${{ github.workspace }}"

          # Check if source directory exists
          if [ ! -d "${SOURCE_DIR}" ]; then
            echo "Build output directory not found: ${SOURCE_DIR}"
            ls -lR "apps/flites/build/" # List build output for debugging
            exit 1
          fi

          echo "Zipping contents of ${SOURCE_DIR} into ${WORKSPACE_ROOT}/${ZIP_FILE_NAME}"
          # Use a subshell: cd into source, zip contents to absolute path, subshell exits (no need to cd back)
          (cd "${SOURCE_DIR}" && zip -r "${WORKSPACE_ROOT}/${ZIP_FILE_NAME}" .)

          # Verify zip file was created at the workspace root
          echo "Verifying zip file:"
          ls -l "${WORKSPACE_ROOT}/${ZIP_FILE_NAME}"
          echo "Created ${ZIP_FILE_NAME}"


      # Upload the created zip artifact
      - name: ‚¨ÜÔ∏è Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.vars.outputs.artifact_upload_name }}
          path: ${{ steps.vars.outputs.artifact_suffix }}

      - name: üß™ Test Web Build (Basic Check)
        shell: bash
        run: |
          # Adjust path relative to workspace root
          INDEX_FILE="apps/flites/build/web/index.html"
          echo "Checking for ${INDEX_FILE}"
          if [ -f "${INDEX_FILE}" ]; then
            echo "Web build output (index.html) found."
          else
            echo "Error: Web build output (index.html) not found!"
            exit 1
          fi
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 
        with:
          artifact_name: ${{ steps.vars.outputs.artifact_upload_name }}
